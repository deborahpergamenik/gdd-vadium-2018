<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhOAE0APcAAAAAAP/////wWS0yd29tbm1rbmppb2Zlbmhnb2Vkb11dcF9fb2Fhb2JicGJib2Zm
        b2lpb1BRclJTcVVWclRVcVZXcVdYcS0xdy4yeDA0djI2djU5djo9dTs+dj5BdT9CdUJFdUNGdERGdEhK
        dEdJc0hKc0tNc01Pc05QclFTclhZcVpbcVlacFtccC4zdy80djE2dzM4djQ5dTY6dTc7djg8djg8dTk9
        dTo+dT1BdUNGc0VIdEdKc0lMc1NVclNVcVRWcVVXcf/vWf/wWv3uWfztWfvsWfvtWvjqWvfoWvXnWvHk
        WvLkW/HjW+/iW+/hXOzfXOveW+veXOrdXOncXOjbXeXYXePWXeHVXuDUXd/TXd7SXtzQXtvQXtrPXtfM
        XtjNX9bLX9XKX9TJX9PIX9LHX9HGX9LHYNDGYNDFYM/FYM3DYMrAYcm/Yce9YcW8YcS7YcW8YsW7YsO6
        YcO6YsK5YsC3YcC3Yr+2Y720Yr21Y7yzY7uyYriwY7evY7evZLOrZLCpZLGqZa+oZK+nZaukZaqjZaih
        ZqWfZaagZqSeZqOdZqCaZp+ZZ5yXaJeSZ5iTaJeSaJaRaJOPaZCMaY+LaYmGaoaDaqSdZpyWZ5qUZ5qU
        aJWQaJSPaZKNaZCLaY2JaY2JaoqGaYqGaomFaYmFaoJ/a3x6bI6JaYWBa398a3t5bH57a3x5a3x5bHZ0
        bXVzbXNxbXBvbXFvbm9tbW9ubv///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACwAAAAAOAE0AAAI/wCHCBxIkKCAgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIcWPBjwM7ihxJsqTJkyhT
        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
        ADs=
</value>
  </data>
</root>